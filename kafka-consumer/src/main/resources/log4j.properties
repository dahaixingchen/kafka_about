log4j.rootLogger=INFO,Console,Info-log,Warn-log,Error-log,Fatal-log
#打印所有日志到控制台
log4j.appender.Console=org.apache.log4j.ConsoleAppender
#如果想要打印所有日志，则设置的为TRACE，如果只想要看到info以上级别的日志，则可以设置为INFO。
log4j.appender.Console.Threshold=TRACE
log4j.appender.Console.ImmediateFlush=true
#控制台输出为System.out，也可以为System.error，这样错误的信息会显示红色
log4j.appender.Console.Target=System.out
log4j.appender.Console.layout=org.apache.log4j.PatternLayout
#log4j.appender.Console.layout.ConversionPattern = %d{yyyy-MM-dd HH:mm:ss}  [%t] [%l] : %m%n
#控制台上打印
log4j.appender.Console.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} : %m%n 
#org.apache.log4j.ConsoleAppender（控制台）
#org.apache.log4j.FileAppender（文件）
#org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件）
#org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件）
#org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方）
#info级别日志的，每天产生一个日志文件
log4j.appender.Info-log=org.apache.log4j.DailyRollingFileAppender
#打印日志到logs文件夹下面的info-log文件里面
log4j.appender.Info-log.File=E://logs/info-log.log
#按天命名每天的日志文件
log4j.appender.Info-log.DatePattern='.'yyyy-MM-dd
log4j.appender.Info-log.Threshold=INFO
log4j.appender.Info-log.layout=org.apache.log4j.PatternLayout
log4j.appender.Info-log.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss}  [%t] [%l] : %m%n
log4j.appender.Info-log.filter.F1=org.apache.log4j.varia.LevelRangeFilter
#这里是设置info日志过滤器的最小日志级别和最大日志级别，这样info-log就会过滤调除info以外的其他日志。
log4j.appender.Info-log.filter.F1.LevelMin=INFO
log4j.appender.Info-log.filter.F1.LevelMax=INFO
#warn日志
log4j.appender.Warn-log=org.apache.log4j.DailyRollingFileAppender
log4j.appender.Warn-log.File=E://logs/warn-log.log
log4j.appender.Warn-log.DatePattern='.'yyyy-MM-dd
log4j.appender.Warn-log.Threshold=INFO
log4j.appender.Warn-log.layout=org.apache.log4j.PatternLayout
log4j.appender.Warn-log.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss}  [%t] [%l] : %m%n
log4j.appender.Warn-log.filter.F1=org.apache.log4j.varia.LevelRangeFilter
log4j.appender.Warn-log.filter.F1.LevelMin=WARN
log4j.appender.Warn-log.filter.F1.LevelMax=WARN
#error日志
log4j.appender.Error-log=org.apache.log4j.DailyRollingFileAppender
log4j.appender.Error-log.File=E://logs/error-log.log
log4j.appender.Error-log.DatePattern='.'yyyy-MM-dd
log4j.appender.Error-log.Threshold=INFO
log4j.appender.Error-log.layout=org.apache.log4j.PatternLayout
log4j.appender.Error-log.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss}  [%t] [%l] : %m%n
log4j.appender.Error-log.filter.F1=org.apache.log4j.varia.LevelRangeFilter
log4j.appender.Error-log.filter.F1.LevelMin=ERROR
log4j.appender.Error-log.filter.F1.LevelMax=ERROR
#fatal日志
log4j.appender.Fatal-log=org.apache.log4j.DailyRollingFileAppender
log4j.appender.Fatal-log.File=E://logs/fatal-log.log
log4j.appender.Fatal-log.DatePattern='.'yyyy-MM-dd
log4j.appender.Fatal-log.Threshold=INFO
log4j.appender.Fatal-log.layout=org.apache.log4j.PatternLayout
log4j.appender.Fatal-log.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss}  [%t] [%l] : %m%n
log4j.appender.Fatal-log.filter.F1=org.apache.log4j.varia.LevelRangeFilter
log4j.appender.Fatal-log.filter.F1.LevelMin=FATAL
log4j.appender.Fatal-log.filter.F1.LevelMax=FATAL
#把日志直接输入到mysql中
##sql日志，打印mybatis里面生成的sql语句
##注意log4j.logger.org.springframework=debug这一句在springmvc+mybatis下是必须，否则不会打印sql日志
#log4j.logger.org.springframework=debug
##对mybatis的dao层设置日志级别DEBUG
#log4j.logger.com.ssm.demo.dao=DEBUG,Sql
##使该自定义日志不继承根日志，即sql语句的日志只在该日志文件中打印，不在根日志中显示，默认为true
#log4j.additivity.com.ssm.demo.dao=false
#log4j.appender.Sql = org.apache.log4j.DailyRollingFileAppender
#log4j.appender.Sql.File =logs/sql-log.log
#log4j.appender.Sql.DatePattern ='.'yyyy-MM-dd
#log4j.appender.Sql.Threshold =DEBUG
#log4j.appender.Sql.Append =true
#log4j.appender.Sql.layout =org.apache.log4j.PatternLayout
#log4j.appender.Sql.layout.ConversionPattern =%logger{36} %d{HH:mm:ss.SSS} %-5level [%t] [%l] - %m%n